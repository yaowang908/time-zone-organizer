[{"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\Entry.component.tsx":"1","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\pages\\Homepage.stories.tsx":"2","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\pages\\Homepage.component.tsx":"3","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\lib\\getCurrentDateTimeInFormat.tsx":"4","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\data\\timezones.tsx":"5","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\TimezonePicker.component.tsx":"6","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\Timeline.component.tsx":"7","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\lib\\getUserDateTime.tsx":"8","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\stories\\Page.stories.tsx":"9","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\stories\\Button.stories.tsx":"10","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\settings\\color.settings.tsx":"11","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\lib\\getFormattedDate.tsx":"12","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\stories\\Header.tsx":"13","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\Entry.stories.tsx":"14","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\index.tsx":"15","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\App.tsx":"16","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\TimezonePicker.stories.tsx":"17","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\settings\\hours.setting.tsx":"18","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\stories\\Page.tsx":"19","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\stories\\Button.tsx":"20","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\Timeline.stories.tsx":"21","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\lib\\useLocalStorageHook.tsx":"22","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\lib\\getClientTimezone.tsx":"23","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\reportWebVitals.ts":"24"},{"size":7206,"mtime":1614096592499,"results":"25","hashOfConfig":"26"},{"size":706,"mtime":1613598364206,"results":"27","hashOfConfig":"26"},{"size":7473,"mtime":1614044996055,"results":"28","hashOfConfig":"26"},{"size":924,"mtime":1613947095617,"results":"29","hashOfConfig":"26"},{"size":8097,"mtime":1613270931542,"results":"30","hashOfConfig":"26"},{"size":1567,"mtime":1614048834882,"results":"31","hashOfConfig":"26"},{"size":9308,"mtime":1614096787719,"results":"32","hashOfConfig":"26"},{"size":2820,"mtime":1613788989019,"results":"33","hashOfConfig":"26"},{"size":605,"mtime":1608166159266,"results":"34","hashOfConfig":"26"},{"size":804,"mtime":1608166159266,"results":"35","hashOfConfig":"26"},{"size":254,"mtime":1614092260208,"results":"36","hashOfConfig":"26"},{"size":359,"mtime":1613947413304,"results":"37","hashOfConfig":"26"},{"size":1356,"mtime":1608166159266,"results":"38","hashOfConfig":"26"},{"size":1140,"mtime":1612487742855,"results":"39","hashOfConfig":"26"},{"size":500,"mtime":1607822183420,"results":"40","hashOfConfig":"26"},{"size":376,"mtime":1614046610885,"results":"41","hashOfConfig":"26"},{"size":416,"mtime":1612921570468,"results":"42","hashOfConfig":"26"},{"size":514,"mtime":1610062729274,"results":"43","hashOfConfig":"26"},{"size":2415,"mtime":1608166159266,"results":"44","hashOfConfig":"26"},{"size":941,"mtime":1608166159266,"results":"45","hashOfConfig":"26"},{"size":1384,"mtime":1612921394519,"results":"46","hashOfConfig":"26"},{"size":1559,"mtime":1613876378572,"results":"47","hashOfConfig":"26"},{"size":523,"mtime":1613948058649,"results":"48","hashOfConfig":"26"},{"size":425,"mtime":1607822183420,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hmkt3r",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\Entry.component.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\pages\\Homepage.stories.tsx",[],["104","105"],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\pages\\Homepage.component.tsx",["106","107","108","109","110","111","112","113"],"import React from 'react';\r\n// import spacetime from 'spacetime';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport defaultColor from '../settings/color.settings';\r\nimport Entry from '../components/Entry.component';\r\nimport getCurrentDateTimeInFormat from '../lib/getCurrentDateTimeInFormat';\r\nimport useLocalStorage from '../lib/useLocalStorageHook';\r\nimport getClientTimezone from '../lib/getClientTimezone';\r\n\r\nimport './Homepage.style.scss';\r\n\r\ninterface User {\r\n  id: number; \r\n  name: string; \r\n  timezone: string;\r\n};\r\nexport interface Props {\r\n  users: User[];\r\n  color?: {\r\n    night?: string;\r\n    day?: string;\r\n    nightText?: string;\r\n    dayText?: string;\r\n    background?: string;\r\n    textLighter?: string;\r\n    textDarker?: string;\r\n    white?: string;\r\n  };\r\n  elementWidth?: number;\r\n};\r\n\r\nconst Homepage: React.FC<Props> = ({ users, color = defaultColor, elementWidth = 50 }) => {\r\n\r\n  const defaultTimezoneInitValue = getClientTimezone();\r\n\r\n  const [ usersState, setUsersState ] = React.useState(users);\r\n  const [ localDateTimeState, setLocalDateTimeState ] = React.useState(new Date());\r\n  const [ defaultTimezoneState, setDefaultTimezoneState ] = React.useState(defaultTimezoneInitValue);\r\n  // DONE: this init defaultTimezone needs to match user's timezone\r\n  // const [ timeState, setTimeState ] = React.useState(getCurrentDateTimeInFormat().time);\r\n  // const [ dateState, setDateState ] = React.useState(getCurrentDateTimeInFormat().date);\r\n  const [ dateTimeState, setDateTimeState ] = React.useState({\r\n    time: getCurrentDateTimeInFormat().time,\r\n    date: getCurrentDateTimeInFormat().date,\r\n  });\r\n  const [usersLocalStorage, setUsersLocalStorage] = useLocalStorage<User[]>('users', users);\r\n  \r\n  // TODO: add support for mobile devices\r\n  const isDesktopOrLaptop = useMediaQuery({\r\n    query: '(min-width: 1224px)'\r\n  })\r\n  const isBigScreen = useMediaQuery({ query: '(min-width: 1824px)' })\r\n  const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\r\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\r\n  const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' })\r\n  // TODO: publish project\r\n\r\n  React.useEffect(()=>{\r\n    // DONE: when init, check local storage for users data first; \r\n    const savedUsers = usersLocalStorage;\r\n    setUsersState(savedUsers);\r\n    // console.dir(savedUsers);\r\n  },[]);\r\n\r\n  const addPersonClickHandler = () => {\r\n    // DONE: get NewYork local time as default value for new users.\r\n    // const spaceTimeNowInNewYork = spacetime.now(defaultTimezoneState);\r\n    // const timeNowInNewYork = spaceTimeNowInNewYork.hour() + ':' + spaceTimeNowInNewYork.minute() ;\r\n    // const dateNowInNewYork = ( spaceTimeNowInNewYork.month() + 1 ) + '-' + spaceTimeNowInNewYork.date() + '-' + spaceTimeNowInNewYork.year();\r\n    const newUsersState = [...usersState, {id: usersState.length,name: 'New User', timezone: defaultTimezoneState}];\r\n    \r\n    setUsersState(newUsersState);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // process timezone for usersState\r\n    // const _date = localDateTimeState.toLocaleDateString('default', { year: 'numeric', month: 'long', day: 'numeric' });\r\n    // const _time = localDateTimeState.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true });\r\n\r\n    const {date, time} = getCurrentDateTimeInFormat(defaultTimezoneState, localDateTimeState);\r\n    // console.log(\"🚀 ~ file: Homepage.component.tsx ~ line 58 ~ React.useEffect ~ time\", time)\r\n    // console.log(\"🚀 ~ file: Homepage.component.tsx ~ line 58 ~ React.useEffect ~ date\", date)\r\n    // setTimeState(time);\r\n    // setDateState(date);\r\n    setDateTimeState({time, date})\r\n\r\n    // DONE: next step is to make local Date and local time affect all users\r\n\r\n  }, [localDateTimeState]);\r\n\r\n  const updateUser = (id:number, newTimezone:string) => {\r\n    // update usersState\r\n    let _users = [...usersState];\r\n    let user = {..._users[id]}\r\n    user.timezone = newTimezone;\r\n    _users[id] = user;\r\n    setUsersState(_users);\r\n    setUsersLocalStorage(_users);\r\n    // console.log(\"🚀 ~ file: Homepage.component.tsx ~ line 74 ~ updateUser ~ users\", users)\r\n  };\r\n\r\n  const updateUserName = (id:number, newUsername:string) => {\r\n    // update currentUserName\r\n    let _users = [...usersState];\r\n    let user = {..._users[id]}\r\n    user.name = newUsername;\r\n    _users[id] = user;\r\n    setUsersState(_users);\r\n    setUsersLocalStorage(_users);\r\n    // console.log(\"🚀 ~ file: Homepage.component.tsx ~ line 89 ~ updateUserName ~ users\", users)\r\n  };\r\n\r\n  //DONE: functions that will pass down to child components to updated userName\r\n  // time could only be changed in local format \r\n\r\n  // DONE: get all changes into on object, save to localStorage\r\n  // DONE: add a reset button\r\n  const clearLocalStorage = () => {\r\n    setUsersLocalStorage(users);\r\n    setUsersState(users);\r\n  };\r\n  const reset = () => {\r\n    confirmAlert({\r\n      title: 'Confirm to DELETE all data',\r\n      message: 'Are you sure to do this.',\r\n      buttons: [\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => {clearLocalStorage()}\r\n        },\r\n        {\r\n          label: 'No',\r\n          onClick: () => {console.log('Deletion Abort!')}\r\n        }\r\n      ]\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='container' style={{backgroundColor: color.background}}>\r\n      <div className=\"nav\">\r\n        <div className=\"logo\"></div>\r\n        <div className=\"menu_container\">\r\n          <div className=\"menu_item\" onClick={reset}>Reset</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"local_time\" style={{color:color.white,backgroundColor: color.background}}>\r\n        <div className=\"title input_div\">Local Time</div>\r\n        \r\n        <DatePicker \r\n          showTimeSelect\r\n          selected={localDateTimeState}\r\n          dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n          onChange={(date: Date) => setLocalDateTimeState(date)}  \r\n        />\r\n        {/* NOTE: local time change on real time */}\r\n        {/* after a second thought, I don't think it's good idea to update it per minute, this app is not really time sensitive after all */}\r\n        <div className=\"triangle\"></div>\r\n      </div>\r\n      <div className=\"indicator\"></div>\r\n      <div className=\"content\">\r\n        {usersState ? usersState.map((user, index) => (\r\n          <Entry \r\n            key={index}\r\n            updateUser={ (newTimezone:string) => {\r\n              updateUser(user.id, newTimezone);\r\n            }}\r\n            updateUserName={ (newUsername:string) => {\r\n              updateUserName(user.id, newUsername);\r\n            }}\r\n            name={user.name} \r\n            timezone={user.timezone}\r\n            localTimezone={defaultTimezoneState}\r\n            localTime={dateTimeState.time}\r\n            localDate={dateTimeState.date}\r\n            militaryFormat={false}\r\n            elementWidth={elementWidth}\r\n            />\r\n        )) : ''}\r\n      </div>\r\n      <div className=\"footer\">\r\n        <div className=\"add_person\" onClick={addPersonClickHandler}>\r\n          <div className=\"cross\"></div>\r\n          <div className=\"cross_title\">add person</div>          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;","D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\lib\\getCurrentDateTimeInFormat.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\data\\timezones.tsx",[],["114","115"],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\TimezonePicker.component.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\Timeline.component.tsx",["116","117"],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\lib\\getUserDateTime.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\stories\\Page.stories.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\stories\\Button.stories.tsx",[],["118","119"],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\settings\\color.settings.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\lib\\getFormattedDate.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\stories\\Header.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\Entry.stories.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\index.tsx",[],["120","121"],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\App.tsx",[],["122","123"],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\TimezonePicker.stories.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\settings\\hours.setting.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\stories\\Page.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\stories\\Button.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\components\\Timeline.stories.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\lib\\useLocalStorageHook.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\lib\\getClientTimezone.tsx",[],"D:\\Github\\Time Zone Organizer\\time-zone-organizer\\src\\reportWebVitals.ts",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":44,"column":33,"nodeType":"130","messageId":"131","endLine":44,"endColumn":56},{"ruleId":"128","severity":1,"message":"132","line":55,"column":9,"nodeType":"130","messageId":"131","endLine":55,"endColumn":26},{"ruleId":"128","severity":1,"message":"133","line":58,"column":9,"nodeType":"130","messageId":"131","endLine":58,"endColumn":20},{"ruleId":"128","severity":1,"message":"134","line":59,"column":9,"nodeType":"130","messageId":"131","endLine":59,"endColumn":25},{"ruleId":"128","severity":1,"message":"135","line":60,"column":9,"nodeType":"130","messageId":"131","endLine":60,"endColumn":19},{"ruleId":"128","severity":1,"message":"136","line":61,"column":9,"nodeType":"130","messageId":"131","endLine":61,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":69,"column":5,"nodeType":"139","endLine":69,"endColumn":7,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":95,"column":6,"nodeType":"139","endLine":95,"endColumn":26,"suggestions":"142"},{"ruleId":"124","replacedBy":"143"},{"ruleId":"126","replacedBy":"144"},{"ruleId":"128","severity":1,"message":"145","line":67,"column":10,"nodeType":"130","messageId":"131","endLine":67,"endColumn":26},{"ruleId":"128","severity":1,"message":"146","line":67,"column":28,"nodeType":"130","messageId":"131","endLine":67,"endColumn":47},{"ruleId":"124","replacedBy":"147"},{"ruleId":"126","replacedBy":"148"},{"ruleId":"124","replacedBy":"149"},{"ruleId":"126","replacedBy":"150"},{"ruleId":"124","replacedBy":"151"},{"ruleId":"126","replacedBy":"152"},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"@typescript-eslint/no-unused-vars","'setDefaultTimezoneState' is assigned a value but never used.","Identifier","unusedVar","'isDesktopOrLaptop' is assigned a value but never used.","'isBigScreen' is assigned a value but never used.","'isTabletOrMobile' is assigned a value but never used.","'isPortrait' is assigned a value but never used.","'isRetina' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'usersLocalStorage'. Either include it or remove the dependency array.","ArrayExpression",["155"],"React Hook React.useEffect has a missing dependency: 'defaultTimezoneState'. Either include it or remove the dependency array.",["156"],["153"],["154"],"'holderMarginLeft' is assigned a value but never used.","'setHolderMarginLeft' is assigned a value but never used.",["153"],["154"],["153"],["154"],["153"],["154"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [usersLocalStorage]",{"range":"161","text":"162"},"Update the dependencies array to be: [defaultTimezoneState, localDateTimeState]",{"range":"163","text":"164"},[2610,2612],"[usersLocalStorage]",[4002,4022],"[defaultTimezoneState, localDateTimeState]"]